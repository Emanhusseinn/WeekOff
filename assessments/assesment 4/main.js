// remember to relax and ask for help when you need it (only from staff)// YOU CAN ONLY USE MDN AS A RESOURCE// https://developer.mozilla.org/en-US/docs/Web/JavaScript// NOTE: you are accountable for your styling, so make sure your styling is good.// ANOTHER NOTE: please use the console to test your code :)// use the following helper functions in your solutionfunction each(coll, f) {  if (Array.isArray(coll)) {    for (var i = 0; i < coll.length; i++) {      f(coll[i], i);    }  } else {    for (var key in coll) {      f(coll[key], key);    }  }}function filter(array, predicate) {  var acc = [];  each(array, function(element, i) {    if (predicate(element, i)) {      acc.push(element);    }  });  return acc;}function map(array, func) {  var acc = [];  each(array, function(element, i) {    acc.push(func(element, i));  });  return acc;}function reduce(array, f, acc) {  if (acc === undefined) {    acc = array[0];    array = array.slice(1);  }  each(array, function(element, i) {    acc = f(acc, element, i);  });  return acc; }//=============================================================================/*                                  Q1                                      *///=============================================================================//Write a function that takes an array of strings as a input,and returns an array //of all of those strings, but transformed to upper case. //You can use toUpperCase method to convert a string to upper case.//solve it using the most appropriate helper functions(each,map,filter).// Note: please write one or two lines here describing your solution.// first i'm gonna use each to itirate thrugh the array ,i'll assighn each index to be an upperrcase //i'll make an empty array and push my new values inside of it.// var strArr = ['hello', 'world', 'whirled', 'peas'];// uppercaseAll(strArr); ==> [ 'HELLO', 'WORLD', 'WHIRLED', 'PEAS' ]var strArr = ['hello', 'world', 'whirled', 'peas'];// function uppercaseAll(arrayOfStrings) {//   var array = [];//   each (arrayOfStrings, function(index){//     array.push(index.toUpperCase())//   });//      return array;//  }function uppercaseAll(arrayOfStrings) {     return map(arrayOfStrings, function(element, i){      return element.toUpperCase()     }) };//=============================================================================/*                                  Q2                                       *///=============================================================================//write a function that takes array of objects  as an input and returns an array//with only the countries that have a population higher than 500 million.//solve it using one of the most appropriate helperthe helpers functions(each,map,filter).//Here’s the data you’ll work with:var data = [{  country: 'China',  population: 1409517397,},{  country: 'India',  population: 1339180127,},{  country: 'USA',  population: 324459463,},{  country: 'Indonesia',  population: 263991379,}];// highestPopulation(data); ==> [{country: "China", population: 1409517397},{country: "India", population: 1339180127}]// Note: please write one or two lines here describing your solution.//first i used map to itirate // function highestPopulation(arrayOfObjects) {//   var arr=[];//   return map(arrayOfObjects,function(object,i){//     if (object.population >= 5000000000){//       return object;//     }//     return arr.push(object);//   });// }function highestPopulation(arrayOfObjects) {  return filter(arrayOfObjects,function(object,key){     return (element.population > 500000000) ;  });}//=============================================================================/*                              Q3                                           *///=============================================================================//Write a function halveAll that takes an array of numbers as a input and returns an array// of all of those numbers halved (divided by two).//Note: solve it using the most appropriate helper functions(each,map,filter)// var numsArray = [2, 6, 20, 8, 14];// halveAll(numsArray); ==> [ 1, 3, 10, 4, 7 ]// Note: please write one or two lines here describing your solution.// i declared a variable as an empty array to push my solusions inside it .// i used each to itirate through each number and devide it on 2.function halveAll(numbers) {return map(numbers, function(num,i){  return num/2});}//=============================================================================/*                                  Q4                                       *///=============================================================================//write a function called values that accepts an object as a parameter, and outputs an array of the object's values.//solve it using one of the most appropriate helpers functions(each,map,filter).// values({first : 5, second: 'something' , third : 129}) ==> [5, 'something', 129]; // Note: please write one or two lines here describing your solution. function values(obj) {  return map(obj, function(object,key){    return object;  }); }//=======================================================================/*                                  Q5                                  *///======================================================================= // Use the updated version of reduce to write a function max that returns the maximum number in an array of numbers. // Write your code here .....function max(n){    var max = numbers[0]  return reduce(numbers, function(maximum,num){    if(num > maximum){      maximum = num    }    return maximum;  },n[0])}function maxImproved(numbers){   return reduce (numbers,function(maximum,num){    if(num > maximum){       maximum = num;     }       return maximum;  });}              //Good Luck :))